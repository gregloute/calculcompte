security:
    password_hashers:
        # auto hasher with default options for the User class (and children)
        App\Entity\Utilisateur: 'auto'

        # auto hasher with custom options for all PasswordAuthenticatedUserInterface instances
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
            algorithm: 'auto'
            cost: 15
    providers:
        users_in_memory: { memory: null }
        in_database:
            entity:
                class: App\Entity\Utilisateur
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: in_database

            form_login:
                login_path: connexion
                check_path: connexion
                default_target_path: mois#index

            logout:
                path: deconnexion
                target: home

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/mois, roles: ROLE_USER }
        - { path: ^/import-export, roles: ROLE_USER }
